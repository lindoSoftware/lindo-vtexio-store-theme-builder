"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createEventLoopLagPercentilesInstrument = exports.createEventLoopLagMaxInstrument = exports.createConcurrentRequestsInstrument = exports.createRequestsResponseSizesInstrument = exports.createRequestsTimingsInstrument = exports.createTotalAbortedRequestsInstrument = exports.createTotalRequestsInstrument = void 0;
const prom_client_1 = require("prom-client");
const MetricNames_1 = require("./MetricNames");
const createTotalRequestsInstrument = () => new prom_client_1.Counter(MetricNames_1.REQUESTS_TOTAL);
exports.createTotalRequestsInstrument = createTotalRequestsInstrument;
const createTotalAbortedRequestsInstrument = () => new prom_client_1.Counter(MetricNames_1.REQUESTS_ABORTED);
exports.createTotalAbortedRequestsInstrument = createTotalAbortedRequestsInstrument;
const createRequestsTimingsInstrument = () => new prom_client_1.Histogram(MetricNames_1.REQUEST_TIMINGS);
exports.createRequestsTimingsInstrument = createRequestsTimingsInstrument;
const createRequestsResponseSizesInstrument = () => new prom_client_1.Histogram(MetricNames_1.REQUEST_RESPONSE_SIZES);
exports.createRequestsResponseSizesInstrument = createRequestsResponseSizesInstrument;
const createConcurrentRequestsInstrument = () => new prom_client_1.Gauge(MetricNames_1.CONCURRENT_REQUESTS);
exports.createConcurrentRequestsInstrument = createConcurrentRequestsInstrument;
const createEventLoopLagMaxInstrument = () => new prom_client_1.Gauge(MetricNames_1.BETWEEN_SCRAPES_EVENT_LOOP_LAG_MAX);
exports.createEventLoopLagMaxInstrument = createEventLoopLagMaxInstrument;
const createEventLoopLagPercentilesInstrument = () => new prom_client_1.Gauge(MetricNames_1.BETWEEN_SCRAPES_EVENT_LOOP_LAG_PERCENTILES);
exports.createEventLoopLagPercentilesInstrument = createEventLoopLagPercentilesInstrument;
