import { DiagnosticsConfig, TracesConfig } from '../types/config';
export interface ConfigManagerOptions {
    configPath?: string;
    pollIntervalMs?: number;
    enableHotReload?: boolean;
}
export declare class ConfigManager {
    private config;
    private configProvider;
    private options;
    private applicationID;
    private serviceName;
    private pollTimer;
    private configListeners;
    constructor(applicationID: string, serviceName: string, options: ConfigManagerOptions);
    initialize(): Promise<void>;
    getConfig(): DiagnosticsConfig;
    getTracesConfig(): TracesConfig;
    getApplicationID(): string;
    getServiceName(): string;
    onConfigChange(listener: (config: DiagnosticsConfig) => void): () => void;
    private startPolling;
    private checkForConfigUpdates;
    private configChangeTimeout;
    private debounceConfigChange;
    private createDefaultConfig;
    shutdown(): Promise<void>;
}
//# sourceMappingURL=manager.d.ts.map