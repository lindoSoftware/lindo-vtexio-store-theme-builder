import { EventEmitter } from 'events';
import { AccountProvider } from '../../types/traces';
interface FileSourceConfig {
    path: string;
    refreshIntervalMs?: number;
}
export declare class FileSource extends EventEmitter {
    private filePath;
    private refreshIntervalMs;
    private watcher;
    private lastContent;
    constructor(config: FileSourceConfig);
    load(): Promise<Record<string, number>>;
    watch(): void;
    stopWatch(): void;
}
export declare function newFileSource(config: FileSourceConfig): FileSource;
export declare class FileProvider implements AccountProvider {
    private defaultRate;
    private accounts;
    private source;
    constructor(sourceConfig: FileSourceConfig, defaultRate?: number);
    private setupWatcher;
    refresh(): Promise<void>;
    getSamplingRate(accountId: string): [number, boolean];
    getDefaultRate(): number;
    shutdown(): void;
}
export declare function newFileProvider(sourceConfig: FileSourceConfig, defaultRate?: number): AccountProvider;
export {};
//# sourceMappingURL=file-source.d.ts.map